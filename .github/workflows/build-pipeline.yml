name: Build
on: 
  push:
    paths-ignore:
      - "README.md"
  pull_request:
    paths-ignore:
      - "README.md"

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker
      run: docker build --target test --tag todo-app:test .
      
    - name: Run tests in Docker
      run: docker run --mount "type=bind,source=$(pwd),target=/usr/src/app" todo-app:test

    - name: Check if Slack webhook URL secret exists
      id: slack-secret-check
      shell: bash
      if: always()
      run: |
        if [ "${{ secrets.SLACK_WEBHOOK_URL }}" != '' ]; then
          echo "available=true" >> $GITHUB_OUTPUT;
        else
          echo "available=false" >> $GITHUB_OUTPUT;
        fi
    
    - name: Send GitHub Action failure notification to Slack channel
      if: steps.slack-secret-check.outputs.available == 'true' && failure()
      uses: slackapi/slack-github-action@v1.26.0
      with:
        payload: |
          {
            "text": ":x: GitHub Action failed"
          }
      env:  
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Send GitHub Action success notification to Slack channel
      if: steps.slack-secret-check.outputs.available == 'true' && success()
      uses: slackapi/slack-github-action@v1.26.0
      with:
        payload: |
          {
            "text": ":white_check_mark: GitHub Action succeeded"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Send GitHub Action cancelled notification to Slack channel
      if: steps.slack-secret-check.outputs.available == 'true' && cancelled()
      uses: slackapi/slack-github-action@v1.26.0
      with:
        payload: |
          {
            "text": ":warning: GitHub Action cancelled by ${{ github.actor }}"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  docker:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest      
    needs: [build]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          target: production
          tags: ${{ secrets.DOCKER_USERNAME }}/todo-app:production
          cache-from: |
            ${{ secrets.DOCKER_USERNAME }}/todo-app:production
            type=registry,ref=${{ secrets.DOCKER_USERNAME }}/todo-app
        
      - name: Deploy Azure webapp
        id: deploy
        run: curl -dH -X POST '${{ secrets.AZURE_WEBHOOK }}'
