name: Continuous Integration
on: 
  push:
    branches: 
      - main
    paths-ignore:
      - "README.md"
  pull_request:
    paths-ignore:
      - "README.md"


jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker
      run: docker build --target test --tag todo-app:test .
      
    - name: Run tests in Docker
      run: docker run --mount "type=bind,source=$(pwd),target=/usr/src/app" todo-app:test

    - name: Check if Slack webhook URL secret exists
      id: slack-secret-check
      shell: bash
      if: always()
      run: |
        if [ "${{ secrets.SLACK_WEBHOOK_URL }}" != '' ]; then
          echo "available=true" >> $GITHUB_OUTPUT;
        else
          echo "available=false" >> $GITHUB_OUTPUT;
        fi
    
    - name: Send GitHub Action failure notification to Slack channel
      if: steps.slack-secret-check.outputs.available == 'true' && failure()
      uses: slackapi/slack-github-action@v1.26.0
      with:
        payload: |
          {
            "text": ":x: GitHub Action failed"
          }
      env:  
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Send GitHub Action success notification to Slack channel
      if: steps.slack-secret-check.outputs.available == 'true' && success()
      uses: slackapi/slack-github-action@v1.26.0
      with:
        payload: |
          {
            "text": ":white_check_mark: GitHub Action succeeded"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Send GitHub Action cancelled notification to Slack channel
      if: steps.slack-secret-check.outputs.available == 'true' && cancelled()
      uses: slackapi/slack-github-action@v1.26.0
      with:
        payload: |
          {
            "text": ":warning: GitHub Action cancelled by ${{ github.actor }}"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  security:
    name: Snyk
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Check if Snyk token exists
      id: snyk-secret-check
      shell: bash
      if: always()
      run: |
        if [ "${{ secrets.SNYK_TOKEN }}" != '' ]; then
          echo "available=true" >> $GITHUB_OUTPUT;
        else
          echo "available=false" >> $GITHUB_OUTPUT;
        fi

    - name: Run Snyk to check for vulnerabilities
      if: steps.snyk-secret-check.outputs.available == 'true'
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}